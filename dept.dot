strict digraph deps {
"haskellffi" [style=dashed];
{rank=max; "fail"; };
{rank=max; "rts" [shape=box]; };
"Boolean" -> "base";
"Cabal" -> "array";
"Cabal" -> "base";
"Cabal" -> "binary";
"Cabal" -> "bytestring";
"Cabal" -> "containers";
"Cabal" -> "deepseq";
"Cabal" -> "directory";
"Cabal" -> "filepath";
"Cabal" -> "mtl";
"Cabal" -> "parsec";
"Cabal" -> "pretty";
"Cabal" -> "process";
"Cabal" -> "text";
"Cabal" -> "time";
"Cabal" -> "transformers";
"Cabal" -> "unix";
"GLFW-b" -> "array";
"GLFW-b" -> "base";
"GLFW-b" -> "bindings-GLFW";
"GLFW-b" -> "deepseq";
"GLURaw" -> "OpenGLRaw";
"GLURaw" -> "base";
"GLURaw" -> "transformers";
"GLUT" -> "OpenGL";
"GLUT" -> "StateVar";
"GLUT" -> "array";
"GLUT" -> "base";
"GLUT" -> "containers";
"GLUT" -> "transformers";
"GenericPretty" -> "base";
"GenericPretty" -> "ghc-prim";
"GenericPretty" -> "pretty";
"HTTP" -> "array";
"HTTP" -> "base";
"HTTP" -> "bytestring";
"HTTP" -> "mtl";
"HTTP" -> "network";
"HTTP" -> "network-uri";
"HTTP" -> "parsec";
"HTTP" -> "time";
"HUnit" -> "base";
"HUnit" -> "call-stack";
"HUnit" -> "deepseq";
"HaskellForMaths" -> "array";
"HaskellForMaths" -> "base";
"HaskellForMaths" -> "containers";
"HaskellForMaths" -> "random";
"JuicyPixels" -> "base";
"JuicyPixels" -> "binary";
"JuicyPixels" -> "bytestring";
"JuicyPixels" -> "containers";
"JuicyPixels" -> "deepseq";
"JuicyPixels" -> "mtl";
"JuicyPixels" -> "primitive";
"JuicyPixels" -> "transformers";
"JuicyPixels" -> "vector";
"JuicyPixels" -> "zlib";
"MemoTrie" -> "base";
"MemoTrie" -> "newtype-generics";
"MissingH" -> "array";
"MissingH" -> "base";
"MissingH" -> "containers";
"MissingH" -> "directory";
"MissingH" -> "filepath";
"MissingH" -> "hslogger";
"MissingH" -> "mtl";
"MissingH" -> "network";
"MissingH" -> "network-bsd";
"MissingH" -> "old-locale";
"MissingH" -> "old-time";
"MissingH" -> "parsec";
"MissingH" -> "process";
"MissingH" -> "random";
"MissingH" -> "regex-compat";
"MissingH" -> "time";
"MissingH" -> "unix";
"MonadRandom" -> "base";
"MonadRandom" -> "mtl";
"MonadRandom" -> "primitive";
"MonadRandom" -> "random";
"MonadRandom" -> "transformers";
"MonadRandom" -> "transformers-compat";
"NumInstances" -> "base";
"ObjectName" -> "base";
"ObjectName" -> "transformers";
"Only" -> "base";
"Only" -> "deepseq";
"OpenGL" -> "GLURaw";
"OpenGL" -> "ObjectName";
"OpenGL" -> "OpenGLRaw";
"OpenGL" -> "StateVar";
"OpenGL" -> "base";
"OpenGL" -> "bytestring";
"OpenGL" -> "containers";
"OpenGL" -> "text";
"OpenGL" -> "transformers";
"OpenGLRaw" -> "base";
"OpenGLRaw" -> "bytestring";
"OpenGLRaw" -> "containers";
"OpenGLRaw" -> "fixed";
"OpenGLRaw" -> "half";
"OpenGLRaw" -> "text";
"OpenGLRaw" -> "transformers";
"QuickCheck" -> "base";
"QuickCheck" -> "containers";
"QuickCheck" -> "deepseq";
"QuickCheck" -> "random";
"QuickCheck" -> "splitmix";
"QuickCheck" -> "template-haskell";
"QuickCheck" -> "transformers";
"SHA" -> "array";
"SHA" -> "base";
"SHA" -> "binary";
"SHA" -> "bytestring";
"StateVar" -> "base";
"StateVar" -> "stm";
"StateVar" -> "transformers";
"active" -> "base";
"active" -> "lens";
"active" -> "linear";
"active" -> "semigroupoids";
"active" -> "semigroups";
"active" -> "vector";
"adjunctions" -> "array";
"adjunctions" -> "base";
"adjunctions" -> "comonad";
"adjunctions" -> "containers";
"adjunctions" -> "contravariant";
"adjunctions" -> "distributive";
"adjunctions" -> "free";
"adjunctions" -> "mtl";
"adjunctions" -> "profunctors";
"adjunctions" -> "semigroupoids";
"adjunctions" -> "semigroups";
"adjunctions" -> "tagged";
"adjunctions" -> "transformers";
"adjunctions" -> "transformers-compat";
"adjunctions" -> "void";
"aeson" -> "attoparsec";
"aeson" -> "base";
"aeson" -> "base-compat-batteries";
"aeson" -> "bytestring";
"aeson" -> "containers";
"aeson" -> "data-fix";
"aeson" -> "deepseq";
"aeson" -> "dlist";
"aeson" -> "ghc-prim";
"aeson" -> "hashable";
"aeson" -> "primitive";
"aeson" -> "scientific";
"aeson" -> "strict";
"aeson" -> "tagged";
"aeson" -> "template-haskell";
"aeson" -> "text";
"aeson" -> "th-abstraction";
"aeson" -> "these";
"aeson" -> "time";
"aeson" -> "time-compat";
"aeson" -> "unordered-containers";
"aeson" -> "uuid-types";
"aeson" -> "vector";
"ansi-terminal" -> "base";
"ansi-terminal" -> "colour";
"ansi-wl-pprint" -> "ansi-terminal";
"ansi-wl-pprint" -> "base";
"appar" -> "base";
"appar" -> "bytestring";
"array" -> "base";
"ascii-char" -> "base";
"ascii-char" -> "hashable";
"asn1-encoding" -> "asn1-types";
"asn1-encoding" -> "base";
"asn1-encoding" -> "bytestring";
"asn1-encoding" -> "hourglass";
"asn1-parse" -> "asn1-encoding";
"asn1-parse" -> "asn1-types";
"asn1-parse" -> "base";
"asn1-parse" -> "bytestring";
"asn1-types" -> "base";
"asn1-types" -> "bytestring";
"asn1-types" -> "hourglass";
"asn1-types" -> "memory";
"assoc" -> "base";
"assoc" -> "bifunctors";
"assoc" -> "tagged";
"async" -> "base";
"async" -> "hashable";
"async" -> "stm";
"atomic-primops" -> "base";
"atomic-primops" -> "ghc-prim";
"atomic-primops" -> "primitive";
"attoparsec" -> "array";
"attoparsec" -> "base";
"attoparsec" -> "bytestring";
"attoparsec" -> "containers";
"attoparsec" -> "deepseq";
"attoparsec" -> "scientific";
"attoparsec" -> "text";
"attoparsec" -> "transformers";
"auto-update" -> "base";
"base" -> "ghc-prim";
"base" -> "integer-gmp";
"base" -> "rts";
"base-compat" -> "base";
"base-compat" -> "unix";
"base-compat-batteries" -> "base";
"base-compat-batteries" -> "base-compat";
"base-orphans" -> "base";
"base-orphans" -> "ghc-prim";
"base64-bytestring" -> "base";
"base64-bytestring" -> "bytestring";
"basement" -> "base";
"basement" -> "ghc-prim";
"bifunctors" -> "base";
"bifunctors" -> "base-orphans";
"bifunctors" -> "comonad";
"bifunctors" -> "containers";
"bifunctors" -> "tagged";
"bifunctors" -> "template-haskell";
"bifunctors" -> "th-abstraction";
"bifunctors" -> "transformers";
"binary" -> "array";
"binary" -> "base";
"binary" -> "bytestring";
"binary" -> "containers";
"binary-ieee754" -> "array";
"binary-ieee754" -> "base";
"binary-ieee754" -> "binary";
"binary-orphans" -> "base";
"binary-orphans" -> "binary";
"binary-orphans" -> "transformers";
"binary-parsers" -> "base";
"binary-parsers" -> "binary";
"binary-parsers" -> "bytestring";
"binary-parsers" -> "bytestring-lexing";
"binary-parsers" -> "scientific";
"bindings-DSL" -> "base";
"bindings-GLFW" -> "base";
"bindings-GLFW" -> "bindings-DSL";
"blaze-builder" -> "base";
"blaze-builder" -> "bytestring";
"blaze-builder" -> "deepseq";
"blaze-builder" -> "text";
"blaze-html" -> "base";
"blaze-html" -> "blaze-builder";
"blaze-html" -> "blaze-markup";
"blaze-html" -> "bytestring";
"blaze-html" -> "text";
"blaze-markup" -> "base";
"blaze-markup" -> "blaze-builder";
"blaze-markup" -> "bytestring";
"blaze-markup" -> "text";
"blaze-textual" -> "base";
"blaze-textual" -> "blaze-builder";
"blaze-textual" -> "bytestring";
"blaze-textual" -> "ghc-prim";
"blaze-textual" -> "integer-gmp";
"blaze-textual" -> "old-locale";
"blaze-textual" -> "text";
"blaze-textual" -> "time";
"blaze-textual" -> "vector";
"bsb-http-chunked" -> "base";
"bsb-http-chunked" -> "bytestring";
"byteorder" -> "base";
"bytes" -> "Cabal";
"bytes" -> "base";
"bytes" -> "binary";
"bytes" -> "binary-orphans";
"bytes" -> "bytestring";
"bytes" -> "cabal-doctest";
"bytes" -> "cereal";
"bytes" -> "containers";
"bytes" -> "hashable";
"bytes" -> "mtl";
"bytes" -> "scientific";
"bytes" -> "text";
"bytes" -> "time";
"bytes" -> "transformers";
"bytes" -> "transformers-compat";
"bytes" -> "unordered-containers";
"bytes" -> "void";
"bytestring" -> "base";
"bytestring" -> "deepseq";
"bytestring" -> "ghc-prim";
"bytestring" -> "integer-gmp";
"bytestring-builder" -> "base";
"bytestring-builder" -> "bytestring";
"bytestring-builder" -> "deepseq";
"bytestring-conversion" -> "attoparsec";
"bytestring-conversion" -> "base";
"bytestring-conversion" -> "bytestring";
"bytestring-conversion" -> "case-insensitive";
"bytestring-conversion" -> "double-conversion";
"bytestring-conversion" -> "text";
"bytestring-lexing" -> "base";
"bytestring-lexing" -> "bytestring";
"bytestring-trie" -> "base";
"bytestring-trie" -> "binary";
"bytestring-trie" -> "bytestring";
"cabal-doctest" -> "Cabal";
"cabal-doctest" -> "base";
"cabal-doctest" -> "directory";
"cabal-doctest" -> "filepath";
"call-stack" -> "base";
"case-insensitive" -> "base";
"case-insensitive" -> "bytestring";
"case-insensitive" -> "deepseq";
"case-insensitive" -> "hashable";
"case-insensitive" -> "text";
"cereal" -> "array";
"cereal" -> "base";
"cereal" -> "bytestring";
"cereal" -> "containers";
"cereal" -> "ghc-prim";
"charset" -> "array";
"charset" -> "base";
"charset" -> "bytestring";
"charset" -> "containers";
"charset" -> "semigroups";
"charset" -> "unordered-containers";
"circle-packing" -> "base";
"clock" -> "base";
"cmdargs" -> "base";
"cmdargs" -> "filepath";
"cmdargs" -> "process";
"cmdargs" -> "template-haskell";
"cmdargs" -> "transformers";
"colour" -> "base";
"comonad" -> "base";
"comonad" -> "containers";
"comonad" -> "distributive";
"comonad" -> "indexed-traversable";
"comonad" -> "tagged";
"comonad" -> "transformers";
"comonad" -> "transformers-compat";
"conduit" -> "base";
"conduit" -> "bytestring";
"conduit" -> "directory";
"conduit" -> "exceptions";
"conduit" -> "filepath";
"conduit" -> "mono-traversable";
"conduit" -> "mtl";
"conduit" -> "primitive";
"conduit" -> "resourcet";
"conduit" -> "text";
"conduit" -> "transformers";
"conduit" -> "unix";
"conduit" -> "unliftio-core";
"conduit" -> "vector";
"conduit-extra" -> "async";
"conduit-extra" -> "attoparsec";
"conduit-extra" -> "base";
"conduit-extra" -> "bytestring";
"conduit-extra" -> "conduit";
"conduit-extra" -> "directory";
"conduit-extra" -> "filepath";
"conduit-extra" -> "network";
"conduit-extra" -> "primitive";
"conduit-extra" -> "process";
"conduit-extra" -> "resourcet";
"conduit-extra" -> "stm";
"conduit-extra" -> "streaming-commons";
"conduit-extra" -> "text";
"conduit-extra" -> "transformers";
"conduit-extra" -> "typed-process";
"conduit-extra" -> "unliftio-core";
"connection" -> "base";
"connection" -> "basement";
"connection" -> "bytestring";
"connection" -> "containers";
"connection" -> "data-default-class";
"connection" -> "network";
"connection" -> "socks";
"connection" -> "tls";
"connection" -> "x509";
"connection" -> "x509-store";
"connection" -> "x509-system";
"connection" -> "x509-validation";
"containers" -> "array";
"containers" -> "base";
"containers" -> "deepseq";
"contravariant" -> "StateVar";
"contravariant" -> "base";
"contravariant" -> "transformers";
"cookie" -> "base";
"cookie" -> "bytestring";
"cookie" -> "data-default-class";
"cookie" -> "deepseq";
"cookie" -> "text";
"cookie" -> "time";
"cryptonite" -> "base";
"cryptonite" -> "basement";
"cryptonite" -> "bytestring";
"cryptonite" -> "deepseq";
"cryptonite" -> "ghc-prim";
"cryptonite" -> "integer-gmp";
"cryptonite" -> "memory";
"cubicbezier" -> "base";
"cubicbezier" -> "containers";
"cubicbezier" -> "fast-math";
"cubicbezier" -> "integration";
"cubicbezier" -> "matrices";
"cubicbezier" -> "microlens";
"cubicbezier" -> "microlens-mtl";
"cubicbezier" -> "microlens-th";
"cubicbezier" -> "mtl";
"cubicbezier" -> "vector";
"cubicbezier" -> "vector-space";
"data-default" -> "base";
"data-default" -> "data-default-class";
"data-default" -> "data-default-instances-containers";
"data-default" -> "data-default-instances-dlist";
"data-default" -> "data-default-instances-old-locale";
"data-default-class" -> "base";
"data-default-instances-containers" -> "base";
"data-default-instances-containers" -> "containers";
"data-default-instances-containers" -> "data-default-class";
"data-default-instances-dlist" -> "base";
"data-default-instances-dlist" -> "data-default-class";
"data-default-instances-dlist" -> "dlist";
"data-default-instances-old-locale" -> "base";
"data-default-instances-old-locale" -> "data-default-class";
"data-default-instances-old-locale" -> "old-locale";
"data-fix" -> "base";
"data-fix" -> "deepseq";
"data-fix" -> "hashable";
"deepseq" -> "array";
"deepseq" -> "base";
"diagrams" -> "diagrams-contrib";
"diagrams" -> "diagrams-core";
"diagrams" -> "diagrams-lib";
"diagrams" -> "diagrams-svg";
"diagrams-contrib" -> "MonadRandom";
"diagrams-contrib" -> "base";
"diagrams-contrib" -> "circle-packing";
"diagrams-contrib" -> "colour";
"diagrams-contrib" -> "containers";
"diagrams-contrib" -> "cubicbezier";
"diagrams-contrib" -> "data-default";
"diagrams-contrib" -> "data-default-class";
"diagrams-contrib" -> "diagrams-core";
"diagrams-contrib" -> "diagrams-lib";
"diagrams-contrib" -> "diagrams-solve";
"diagrams-contrib" -> "force-layout";
"diagrams-contrib" -> "hashable";
"diagrams-contrib" -> "lens";
"diagrams-contrib" -> "linear";
"diagrams-contrib" -> "mfsolve";
"diagrams-contrib" -> "monoid-extras";
"diagrams-contrib" -> "mtl";
"diagrams-contrib" -> "mtl-compat";
"diagrams-contrib" -> "parsec";
"diagrams-contrib" -> "random";
"diagrams-contrib" -> "semigroups";
"diagrams-contrib" -> "split";
"diagrams-contrib" -> "text";
"diagrams-core" -> "adjunctions";
"diagrams-core" -> "base";
"diagrams-core" -> "containers";
"diagrams-core" -> "distributive";
"diagrams-core" -> "dual-tree";
"diagrams-core" -> "lens";
"diagrams-core" -> "linear";
"diagrams-core" -> "monoid-extras";
"diagrams-core" -> "mtl";
"diagrams-core" -> "profunctors";
"diagrams-core" -> "semigroups";
"diagrams-core" -> "unordered-containers";
"diagrams-lib" -> "JuicyPixels";
"diagrams-lib" -> "active";
"diagrams-lib" -> "adjunctions";
"diagrams-lib" -> "array";
"diagrams-lib" -> "base";
"diagrams-lib" -> "bytestring";
"diagrams-lib" -> "cereal";
"diagrams-lib" -> "colour";
"diagrams-lib" -> "containers";
"diagrams-lib" -> "data-default-class";
"diagrams-lib" -> "diagrams-core";
"diagrams-lib" -> "diagrams-solve";
"diagrams-lib" -> "directory";
"diagrams-lib" -> "distributive";
"diagrams-lib" -> "dual-tree";
"diagrams-lib" -> "exceptions";
"diagrams-lib" -> "filepath";
"diagrams-lib" -> "fingertree";
"diagrams-lib" -> "fsnotify";
"diagrams-lib" -> "hashable";
"diagrams-lib" -> "intervals";
"diagrams-lib" -> "lens";
"diagrams-lib" -> "linear";
"diagrams-lib" -> "monoid-extras";
"diagrams-lib" -> "mtl";
"diagrams-lib" -> "optparse-applicative";
"diagrams-lib" -> "process";
"diagrams-lib" -> "profunctors";
"diagrams-lib" -> "semigroups";
"diagrams-lib" -> "tagged";
"diagrams-lib" -> "text";
"diagrams-lib" -> "transformers";
"diagrams-lib" -> "unordered-containers";
"diagrams-solve" -> "base";
"diagrams-svg" -> "JuicyPixels";
"diagrams-svg" -> "base";
"diagrams-svg" -> "base64-bytestring";
"diagrams-svg" -> "bytestring";
"diagrams-svg" -> "colour";
"diagrams-svg" -> "containers";
"diagrams-svg" -> "diagrams-core";
"diagrams-svg" -> "diagrams-lib";
"diagrams-svg" -> "filepath";
"diagrams-svg" -> "hashable";
"diagrams-svg" -> "lens";
"diagrams-svg" -> "monoid-extras";
"diagrams-svg" -> "mtl";
"diagrams-svg" -> "optparse-applicative";
"diagrams-svg" -> "semigroups";
"diagrams-svg" -> "split";
"diagrams-svg" -> "svg-builder";
"diagrams-svg" -> "text";
"direct-sqlite" -> "base";
"direct-sqlite" -> "bytestring";
"direct-sqlite" -> "semigroups";
"direct-sqlite" -> "text";
"directory" -> "base";
"directory" -> "filepath";
"directory" -> "time";
"directory" -> "unix";
"distributive" -> "base";
"distributive" -> "base-orphans";
"distributive" -> "tagged";
"distributive" -> "transformers";
"dlist" -> "base";
"dlist" -> "deepseq";
"double-conversion" -> "base";
"double-conversion" -> "bytestring";
"double-conversion" -> "ghc-prim";
"double-conversion" -> "text";
"dual-tree" -> "base";
"dual-tree" -> "monoid-extras";
"dual-tree" -> "newtype-generics";
"dual-tree" -> "semigroups";
"easy-file" -> "base";
"easy-file" -> "directory";
"easy-file" -> "filepath";
"easy-file" -> "time";
"easy-file" -> "unix";
"egison-pattern-src" -> "base";
"egison-pattern-src" -> "containers";
"egison-pattern-src" -> "free";
"egison-pattern-src" -> "megaparsec";
"egison-pattern-src" -> "mtl";
"egison-pattern-src" -> "parser-combinators";
"egison-pattern-src" -> "prettyprinter";
"egison-pattern-src" -> "recursion-schemes";
"egison-pattern-src" -> "text";
"egison-pattern-src-th-mode" -> "base";
"egison-pattern-src-th-mode" -> "egison-pattern-src";
"egison-pattern-src-th-mode" -> "haskell-src-exts";
"egison-pattern-src-th-mode" -> "haskell-src-meta";
"egison-pattern-src-th-mode" -> "mtl";
"egison-pattern-src-th-mode" -> "pretty";
"egison-pattern-src-th-mode" -> "template-haskell";
"egison-pattern-src-th-mode" -> "text";
"email-validate" -> "attoparsec";
"email-validate" -> "base";
"email-validate" -> "bytestring";
"email-validate" -> "template-haskell";
"entropy" -> "Cabal";
"entropy" -> "base";
"entropy" -> "bytestring";
"entropy" -> "directory";
"entropy" -> "filepath";
"entropy" -> "process";
"entropy" -> "unix";
"errors" -> "base";
"errors" -> "exceptions";
"errors" -> "safe";
"errors" -> "text";
"errors" -> "transformers";
"errors" -> "transformers-compat";
"exceptions" -> "base";
"exceptions" -> "mtl";
"exceptions" -> "stm";
"exceptions" -> "template-haskell";
"exceptions" -> "transformers";
"extensible-exceptions" -> "base";
"extra" -> "base";
"extra" -> "clock";
"extra" -> "directory";
"extra" -> "filepath";
"extra" -> "process";
"extra" -> "time";
"extra" -> "unix";
"fast-logger" -> "array";
"fast-logger" -> "auto-update";
"fast-logger" -> "base";
"fast-logger" -> "bytestring";
"fast-logger" -> "directory";
"fast-logger" -> "easy-file";
"fast-logger" -> "filepath";
"fast-logger" -> "text";
"fast-logger" -> "unix-compat";
"fast-logger" -> "unix-time";
"fast-math" -> "base";
"file-embed" -> "base";
"file-embed" -> "bytestring";
"file-embed" -> "directory";
"file-embed" -> "filepath";
"file-embed" -> "template-haskell";
"filepath" -> "base";
"filtrable" -> "base";
"filtrable" -> "transformers";
"fingertree" -> "base";
"fixed" -> "base";
"foldl" -> "base";
"foldl" -> "bytestring";
"foldl" -> "comonad";
"foldl" -> "containers";
"foldl" -> "contravariant";
"foldl" -> "hashable";
"foldl" -> "mwc-random";
"foldl" -> "primitive";
"foldl" -> "profunctors";
"foldl" -> "semigroupoids";
"foldl" -> "text";
"foldl" -> "transformers";
"foldl" -> "unordered-containers";
"foldl" -> "vector";
"force-layout" -> "base";
"force-layout" -> "containers";
"force-layout" -> "data-default-class";
"force-layout" -> "lens";
"force-layout" -> "linear";
"foreign-store" -> "base";
"formatting" -> "array";
"formatting" -> "base";
"formatting" -> "bytestring";
"formatting" -> "clock";
"formatting" -> "ghc-prim";
"formatting" -> "integer-gmp";
"formatting" -> "old-locale";
"formatting" -> "scientific";
"formatting" -> "semigroups";
"formatting" -> "text";
"formatting" -> "time";
"formatting" -> "transformers";
"free" -> "base";
"free" -> "comonad";
"free" -> "containers";
"free" -> "distributive";
"free" -> "exceptions";
"free" -> "indexed-traversable";
"free" -> "mtl";
"free" -> "profunctors";
"free" -> "semigroupoids";
"free" -> "template-haskell";
"free" -> "th-abstraction";
"free" -> "transformers";
"free" -> "transformers-base";
"fsnotify" -> "async";
"fsnotify" -> "base";
"fsnotify" -> "bytestring";
"fsnotify" -> "containers";
"fsnotify" -> "directory";
"fsnotify" -> "filepath";
"fsnotify" -> "hfsevents";
"fsnotify" -> "text";
"fsnotify" -> "time";
"fsnotify" -> "unix-compat";
"ghc" -> "array";
"ghc" -> "base";
"ghc" -> "binary";
"ghc" -> "bytestring";
"ghc" -> "containers";
"ghc" -> "deepseq";
"ghc" -> "directory";
"ghc" -> "filepath";
"ghc" -> "ghc-boot";
"ghc" -> "ghc-boot-th";
"ghc" -> "ghc-heap";
"ghc" -> "ghci";
"ghc" -> "hpc";
"ghc" -> "integer-gmp";
"ghc" -> "process";
"ghc" -> "template-haskell";
"ghc" -> "terminfo";
"ghc" -> "time";
"ghc" -> "transformers";
"ghc" -> "unix";
"ghc-boot" -> "base";
"ghc-boot" -> "binary";
"ghc-boot" -> "bytestring";
"ghc-boot" -> "containers";
"ghc-boot" -> "directory";
"ghc-boot" -> "filepath";
"ghc-boot" -> "ghc-boot-th";
"ghc-boot-th" -> "base";
"ghc-heap" -> "base";
"ghc-heap" -> "ghc-prim";
"ghc-heap" -> "rts";
"ghc-paths" -> "Cabal";
"ghc-paths" -> "base";
"ghc-paths" -> "directory";
"ghc-prim" -> "rts";
"ghci" -> "array";
"ghci" -> "base";
"ghci" -> "binary";
"ghci" -> "bytestring";
"ghci" -> "containers";
"ghci" -> "deepseq";
"ghci" -> "filepath";
"ghci" -> "ghc-boot";
"ghci" -> "ghc-boot-th";
"ghci" -> "ghc-heap";
"ghci" -> "template-haskell";
"ghci" -> "transformers";
"ghci" -> "unix";
"ghci-websockets" -> "aeson";
"ghci-websockets" -> "base";
"ghci-websockets" -> "bytestring";
"ghci-websockets" -> "containers";
"ghci-websockets" -> "foreign-store";
"ghci-websockets" -> "text";
"ghci-websockets" -> "wai";
"ghci-websockets" -> "wai-app-static";
"ghci-websockets" -> "warp";
"ghci-websockets" -> "websockets";
"ghcid" -> "ansi-terminal";
"ghcid" -> "base";
"ghcid" -> "cmdargs";
"ghcid" -> "containers";
"ghcid" -> "directory";
"ghcid" -> "extra";
"ghcid" -> "filepath";
"ghcid" -> "fsnotify";
"ghcid" -> "process";
"ghcid" -> "terminal-size";
"ghcid" -> "time";
"ghcid" -> "unix";
"groups" -> "base";
"half" -> "base";
"half" -> "binary";
"half" -> "deepseq";
"half" -> "template-haskell";
"happy" -> "array";
"happy" -> "base";
"happy" -> "containers";
"happy" -> "mtl";
"hashable" -> "base";
"hashable" -> "bytestring";
"hashable" -> "deepseq";
"hashable" -> "ghc-prim";
"hashable" -> "integer-gmp";
"hashable" -> "text";
"haskeline" -> "base";
"haskeline" -> "bytestring";
"haskeline" -> "containers";
"haskeline" -> "directory";
"haskeline" -> "exceptions";
"haskeline" -> "filepath";
"haskeline" -> "process";
"haskeline" -> "stm";
"haskeline" -> "terminfo";
"haskeline" -> "transformers";
"haskeline" -> "unix";
"haskell-lexer" -> "base";
"haskell-src-exts" -> "array";
"haskell-src-exts" -> "base";
"haskell-src-exts" -> "ghc-prim";
"haskell-src-exts" -> "happy";
"haskell-src-exts" -> "pretty";
"haskell-src-meta" -> "base";
"haskell-src-meta" -> "haskell-src-exts";
"haskell-src-meta" -> "pretty";
"haskell-src-meta" -> "syb";
"haskell-src-meta" -> "template-haskell";
"haskell-src-meta" -> "th-orphans";
"haskellffi" -> "GLFW-b";
"haskellffi" -> "GLUT";
"haskellffi" -> "GenericPretty";
"haskellffi" -> "HaskellForMaths";
"haskellffi" -> "JuicyPixels";
"haskellffi" -> "OpenGL";
"haskellffi" -> "aeson";
"haskellffi" -> "ansi-terminal";
"haskellffi" -> "array";
"haskellffi" -> "ascii-char";
"haskellffi" -> "base";
"haskellffi" -> "bindings-GLFW";
"haskellffi" -> "blaze-builder";
"haskellffi" -> "bytestring";
"haskellffi" -> "bytestring-trie";
"haskellffi" -> "case-insensitive";
"haskellffi" -> "containers";
"haskellffi" -> "data-default";
"haskellffi" -> "diagrams";
"haskellffi" -> "diagrams-lib";
"haskellffi" -> "diagrams-svg";
"haskellffi" -> "directory";
"haskellffi" -> "egison-pattern-src";
"haskellffi" -> "email-validate";
"haskellffi" -> "filepath";
"haskellffi" -> "formatting";
"haskellffi" -> "fsnotify";
"haskellffi" -> "ghci-websockets";
"haskellffi" -> "ghcid";
"haskellffi" -> "hashable";
"haskellffi" -> "haskeline";
"haskellffi" -> "hedis";
"haskellffi" -> "hint";
"haskellffi" -> "http-conduit";
"haskellffi" -> "http-types";
"haskellffi" -> "hxt";
"haskellffi" -> "inline-c";
"haskellffi" -> "io-streams";
"haskellffi" -> "juicy-draw";
"haskellffi" -> "lens";
"haskellffi" -> "linear";
"haskellffi" -> "massiv";
"haskellffi" -> "microlens";
"haskellffi" -> "mini-egison";
"haskellffi" -> "mtl";
"haskellffi" -> "mysql-haskell";
"haskellffi" -> "neat-interpolation";
"haskellffi" -> "network";
"haskellffi" -> "network-uri";
"haskellffi" -> "orthotope";
"haskellffi" -> "pretty-show";
"haskellffi" -> "pretty-simple";
"haskellffi" -> "pretty-terminal";
"haskellffi" -> "primitive";
"haskellffi" -> "process";
"haskellffi" -> "rainbow";
"haskellffi" -> "random";
"haskellffi" -> "raw-strings-qq";
"haskellffi" -> "regex";
"haskellffi" -> "regex-applicative";
"haskellffi" -> "regex-applicative-text";
"haskellffi" -> "regex-base";
"haskellffi" -> "regex-compat";
"haskellffi" -> "regex-posix";
"haskellffi" -> "regex-tdfa";
"haskellffi" -> "safe";
"haskellffi" -> "silently";
"haskellffi" -> "split";
"haskellffi" -> "sqlite-simple";
"haskellffi" -> "stm";
"haskellffi" -> "strict-io";
"haskellffi" -> "system-fileio";
"haskellffi" -> "text";
"haskellffi" -> "text-format-simple";
"haskellffi" -> "text-icu";
"haskellffi" -> "time";
"haskellffi" -> "transformers";
"haskellffi" -> "turtle";
"haskellffi" -> "unix";
"haskellffi" -> "unix-time";
"haskellffi" -> "unordered-containers";
"haskellffi" -> "uri-encode";
"haskellffi" -> "utf8-string";
"haskellffi" -> "utility-ht";
"haskellffi" -> "vector";
"haskellffi" -> "vty";
"haskellffi" -> "wai";
"haskellffi" -> "wai-extra";
"haskellffi" -> "wai-predicates";
"haskellffi" -> "wai-session";
"haskellffi" -> "wai-util";
"haskellffi" -> "wai-websockets";
"haskellffi" -> "warp";
"haskellffi" -> "websockets";
"haskellffi" -> "with-utf8";
"haskellffi" -> "word8";
"hedis" -> "HTTP";
"hedis" -> "async";
"hedis" -> "base";
"hedis" -> "bytestring";
"hedis" -> "bytestring-lexing";
"hedis" -> "containers";
"hedis" -> "deepseq";
"hedis" -> "errors";
"hedis" -> "exceptions";
"hedis" -> "mtl";
"hedis" -> "network";
"hedis" -> "network-uri";
"hedis" -> "resource-pool";
"hedis" -> "scanner";
"hedis" -> "stm";
"hedis" -> "text";
"hedis" -> "time";
"hedis" -> "tls";
"hedis" -> "unordered-containers";
"hedis" -> "vector";
"hfsevents" -> "base";
"hfsevents" -> "bytestring";
"hfsevents" -> "cereal";
"hfsevents" -> "mtl";
"hfsevents" -> "text";
"hfsevents" -> "unix";
"hint" -> "base";
"hint" -> "directory";
"hint" -> "exceptions";
"hint" -> "filepath";
"hint" -> "ghc";
"hint" -> "ghc-boot";
"hint" -> "ghc-paths";
"hint" -> "random";
"hint" -> "temporary";
"hint" -> "transformers";
"hint" -> "unix";
"hostname" -> "base";
"hourglass" -> "base";
"hourglass" -> "deepseq";
"hpc" -> "base";
"hpc" -> "containers";
"hpc" -> "deepseq";
"hpc" -> "directory";
"hpc" -> "filepath";
"hpc" -> "time";
"hslogger" -> "base";
"hslogger" -> "bytestring";
"hslogger" -> "containers";
"hslogger" -> "deepseq";
"hslogger" -> "network";
"hslogger" -> "network-bsd";
"hslogger" -> "old-locale";
"hslogger" -> "time";
"hslogger" -> "unix";
"http-accept" -> "base";
"http-accept" -> "bytestring";
"http-client" -> "array";
"http-client" -> "base";
"http-client" -> "blaze-builder";
"http-client" -> "bytestring";
"http-client" -> "case-insensitive";
"http-client" -> "containers";
"http-client" -> "cookie";
"http-client" -> "deepseq";
"http-client" -> "exceptions";
"http-client" -> "filepath";
"http-client" -> "ghc-prim";
"http-client" -> "http-types";
"http-client" -> "memory";
"http-client" -> "mime-types";
"http-client" -> "network";
"http-client" -> "network-uri";
"http-client" -> "random";
"http-client" -> "stm";
"http-client" -> "streaming-commons";
"http-client" -> "text";
"http-client" -> "time";
"http-client" -> "transformers";
"http-client-tls" -> "base";
"http-client-tls" -> "bytestring";
"http-client-tls" -> "case-insensitive";
"http-client-tls" -> "connection";
"http-client-tls" -> "containers";
"http-client-tls" -> "cryptonite";
"http-client-tls" -> "data-default-class";
"http-client-tls" -> "exceptions";
"http-client-tls" -> "http-client";
"http-client-tls" -> "http-types";
"http-client-tls" -> "memory";
"http-client-tls" -> "network";
"http-client-tls" -> "network-uri";
"http-client-tls" -> "text";
"http-client-tls" -> "tls";
"http-client-tls" -> "transformers";
"http-conduit" -> "aeson";
"http-conduit" -> "attoparsec";
"http-conduit" -> "base";
"http-conduit" -> "bytestring";
"http-conduit" -> "conduit";
"http-conduit" -> "conduit-extra";
"http-conduit" -> "http-client";
"http-conduit" -> "http-client-tls";
"http-conduit" -> "http-types";
"http-conduit" -> "mtl";
"http-conduit" -> "resourcet";
"http-conduit" -> "transformers";
"http-conduit" -> "unliftio-core";
"http-date" -> "array";
"http-date" -> "attoparsec";
"http-date" -> "base";
"http-date" -> "bytestring";
"http-date" -> "time";
"http-types" -> "array";
"http-types" -> "base";
"http-types" -> "bytestring";
"http-types" -> "case-insensitive";
"http-types" -> "text";
"http2" -> "array";
"http2" -> "base";
"http2" -> "bytestring";
"http2" -> "case-insensitive";
"http2" -> "containers";
"http2" -> "http-types";
"http2" -> "network";
"http2" -> "network-byte-order";
"http2" -> "psqueues";
"http2" -> "stm";
"http2" -> "time-manager";
"hxt" -> "base";
"hxt" -> "binary";
"hxt" -> "bytestring";
"hxt" -> "containers";
"hxt" -> "deepseq";
"hxt" -> "directory";
"hxt" -> "filepath";
"hxt" -> "hxt-charproperties";
"hxt" -> "hxt-regex-xmlschema";
"hxt" -> "hxt-unicode";
"hxt" -> "mtl";
"hxt" -> "network-uri";
"hxt" -> "parsec";
"hxt-charproperties" -> "base";
"hxt-regex-xmlschema" -> "base";
"hxt-regex-xmlschema" -> "bytestring";
"hxt-regex-xmlschema" -> "hxt-charproperties";
"hxt-regex-xmlschema" -> "parsec";
"hxt-regex-xmlschema" -> "text";
"hxt-unicode" -> "base";
"hxt-unicode" -> "hxt-charproperties";
"indexed-traversable" -> "array";
"indexed-traversable" -> "base";
"indexed-traversable" -> "containers";
"indexed-traversable" -> "transformers";
"inline-c" -> "ansi-wl-pprint";
"inline-c" -> "base";
"inline-c" -> "bytestring";
"inline-c" -> "containers";
"inline-c" -> "hashable";
"inline-c" -> "mtl";
"inline-c" -> "parsec";
"inline-c" -> "parsers";
"inline-c" -> "template-haskell";
"inline-c" -> "transformers";
"inline-c" -> "unordered-containers";
"inline-c" -> "vector";
"integer-gmp" -> "ghc-prim";
"integer-logarithms" -> "array";
"integer-logarithms" -> "base";
"integer-logarithms" -> "ghc-prim";
"integer-logarithms" -> "integer-gmp";
"integration" -> "base";
"integration" -> "parallel";
"intervals" -> "Cabal";
"intervals" -> "array";
"intervals" -> "base";
"intervals" -> "cabal-doctest";
"intervals" -> "distributive";
"intervals" -> "ghc-prim";
"invariant" -> "StateVar";
"invariant" -> "array";
"invariant" -> "base";
"invariant" -> "bifunctors";
"invariant" -> "comonad";
"invariant" -> "containers";
"invariant" -> "contravariant";
"invariant" -> "ghc-prim";
"invariant" -> "profunctors";
"invariant" -> "stm";
"invariant" -> "tagged";
"invariant" -> "template-haskell";
"invariant" -> "th-abstraction";
"invariant" -> "transformers";
"invariant" -> "transformers-compat";
"invariant" -> "unordered-containers";
"io-streams" -> "attoparsec";
"io-streams" -> "base";
"io-streams" -> "bytestring";
"io-streams" -> "bytestring-builder";
"io-streams" -> "network";
"io-streams" -> "primitive";
"io-streams" -> "process";
"io-streams" -> "text";
"io-streams" -> "time";
"io-streams" -> "transformers";
"io-streams" -> "vector";
"io-streams" -> "zlib-bindings";
"iproute" -> "appar";
"iproute" -> "base";
"iproute" -> "byteorder";
"iproute" -> "bytestring";
"iproute" -> "containers";
"iproute" -> "network";
"juicy-draw" -> "JuicyPixels";
"juicy-draw" -> "base";
"juicy-draw" -> "numeric-extras";
"juicy-draw" -> "primitive";
"kan-extensions" -> "adjunctions";
"kan-extensions" -> "array";
"kan-extensions" -> "base";
"kan-extensions" -> "comonad";
"kan-extensions" -> "containers";
"kan-extensions" -> "contravariant";
"kan-extensions" -> "distributive";
"kan-extensions" -> "free";
"kan-extensions" -> "invariant";
"kan-extensions" -> "mtl";
"kan-extensions" -> "profunctors";
"kan-extensions" -> "semigroupoids";
"kan-extensions" -> "tagged";
"kan-extensions" -> "transformers";
"kan-extensions" -> "transformers-compat";
"lens" -> "Cabal";
"lens" -> "array";
"lens" -> "base";
"lens" -> "base-orphans";
"lens" -> "bifunctors";
"lens" -> "bytestring";
"lens" -> "cabal-doctest";
"lens" -> "call-stack";
"lens" -> "comonad";
"lens" -> "containers";
"lens" -> "contravariant";
"lens" -> "distributive";
"lens" -> "exceptions";
"lens" -> "filepath";
"lens" -> "free";
"lens" -> "ghc-prim";
"lens" -> "hashable";
"lens" -> "kan-extensions";
"lens" -> "mtl";
"lens" -> "parallel";
"lens" -> "profunctors";
"lens" -> "reflection";
"lens" -> "semigroupoids";
"lens" -> "tagged";
"lens" -> "template-haskell";
"lens" -> "text";
"lens" -> "th-abstraction";
"lens" -> "transformers";
"lens" -> "transformers-compat";
"lens" -> "unordered-containers";
"lens" -> "vector";
"linear" -> "adjunctions";
"linear" -> "base";
"linear" -> "base-orphans";
"linear" -> "binary";
"linear" -> "bytes";
"linear" -> "cereal";
"linear" -> "containers";
"linear" -> "deepseq";
"linear" -> "distributive";
"linear" -> "ghc-prim";
"linear" -> "hashable";
"linear" -> "lens";
"linear" -> "random";
"linear" -> "reflection";
"linear" -> "semigroupoids";
"linear" -> "semigroups";
"linear" -> "tagged";
"linear" -> "template-haskell";
"linear" -> "transformers";
"linear" -> "transformers-compat";
"linear" -> "unordered-containers";
"linear" -> "vector";
"linear" -> "void";
"managed" -> "base";
"managed" -> "transformers";
"massiv" -> "base";
"massiv" -> "bytestring";
"massiv" -> "deepseq";
"massiv" -> "exceptions";
"massiv" -> "primitive";
"massiv" -> "scheduler";
"massiv" -> "unliftio-core";
"massiv" -> "vector";
"math-functions" -> "base";
"math-functions" -> "data-default-class";
"math-functions" -> "deepseq";
"math-functions" -> "primitive";
"math-functions" -> "vector";
"matrices" -> "base";
"matrices" -> "deepseq";
"matrices" -> "primitive";
"matrices" -> "vector";
"megaparsec" -> "base";
"megaparsec" -> "bytestring";
"megaparsec" -> "case-insensitive";
"megaparsec" -> "containers";
"megaparsec" -> "deepseq";
"megaparsec" -> "mtl";
"megaparsec" -> "parser-combinators";
"megaparsec" -> "scientific";
"megaparsec" -> "text";
"megaparsec" -> "transformers";
"memory" -> "base";
"memory" -> "basement";
"memory" -> "bytestring";
"memory" -> "deepseq";
"memory" -> "ghc-prim";
"mfsolve" -> "base";
"mfsolve" -> "hashable";
"mfsolve" -> "mtl";
"mfsolve" -> "mtl-compat";
"mfsolve" -> "unordered-containers";
"microlens" -> "base";
"microlens-mtl" -> "base";
"microlens-mtl" -> "microlens";
"microlens-mtl" -> "mtl";
"microlens-mtl" -> "transformers";
"microlens-mtl" -> "transformers-compat";
"microlens-th" -> "base";
"microlens-th" -> "containers";
"microlens-th" -> "microlens";
"microlens-th" -> "template-haskell";
"microlens-th" -> "th-abstraction";
"microlens-th" -> "transformers";
"mime-types" -> "base";
"mime-types" -> "bytestring";
"mime-types" -> "containers";
"mime-types" -> "text";
"mini-egison" -> "base";
"mini-egison" -> "egison-pattern-src";
"mini-egison" -> "egison-pattern-src-th-mode";
"mini-egison" -> "haskell-src-exts";
"mini-egison" -> "haskell-src-meta";
"mini-egison" -> "mtl";
"mini-egison" -> "recursion-schemes";
"mini-egison" -> "sort";
"mini-egison" -> "template-haskell";
"monad-control" -> "base";
"monad-control" -> "stm";
"monad-control" -> "transformers";
"monad-control" -> "transformers-base";
"monad-control" -> "transformers-compat";
"monad-loops" -> "base";
"mono-traversable" -> "base";
"mono-traversable" -> "bytestring";
"mono-traversable" -> "containers";
"mono-traversable" -> "hashable";
"mono-traversable" -> "split";
"mono-traversable" -> "text";
"mono-traversable" -> "transformers";
"mono-traversable" -> "unordered-containers";
"mono-traversable" -> "vector";
"mono-traversable" -> "vector-algorithms";
"monoid-extras" -> "base";
"monoid-extras" -> "groups";
"monoid-extras" -> "semigroupoids";
"mtl" -> "base";
"mtl" -> "transformers";
"mtl-compat" -> "base";
"mtl-compat" -> "mtl";
"mwc-random" -> "base";
"mwc-random" -> "math-functions";
"mwc-random" -> "primitive";
"mwc-random" -> "time";
"mwc-random" -> "vector";
"mysql-haskell" -> "base";
"mysql-haskell" -> "binary";
"mysql-haskell" -> "binary-ieee754";
"mysql-haskell" -> "binary-parsers";
"mysql-haskell" -> "blaze-textual";
"mysql-haskell" -> "bytestring";
"mysql-haskell" -> "bytestring-lexing";
"mysql-haskell" -> "cryptonite";
"mysql-haskell" -> "io-streams";
"mysql-haskell" -> "memory";
"mysql-haskell" -> "monad-loops";
"mysql-haskell" -> "network";
"mysql-haskell" -> "scientific";
"mysql-haskell" -> "tcp-streams";
"mysql-haskell" -> "text";
"mysql-haskell" -> "time";
"mysql-haskell" -> "tls";
"mysql-haskell" -> "vector";
"mysql-haskell" -> "wire-streams";
"mysql-haskell" -> "word24";
"neat-interpolation" -> "base";
"neat-interpolation" -> "megaparsec";
"neat-interpolation" -> "template-haskell";
"neat-interpolation" -> "text";
"network" -> "base";
"network" -> "bytestring";
"network" -> "deepseq";
"network-bsd" -> "base";
"network-bsd" -> "deepseq";
"network-bsd" -> "network";
"network-byte-order" -> "base";
"network-byte-order" -> "bytestring";
"network-uri" -> "base";
"network-uri" -> "deepseq";
"network-uri" -> "parsec";
"network-uri" -> "template-haskell";
"newtype-generics" -> "base";
"newtype-generics" -> "transformers";
"numeric-extras" -> "base";
"old-locale" -> "base";
"old-time" -> "base";
"old-time" -> "old-locale";
"optional-args" -> "base";
"optparse-applicative" -> "ansi-wl-pprint";
"optparse-applicative" -> "base";
"optparse-applicative" -> "process";
"optparse-applicative" -> "transformers";
"optparse-applicative" -> "transformers-compat";
"ordered-containers" -> "base";
"ordered-containers" -> "containers";
"orthotope" -> "QuickCheck";
"orthotope" -> "base";
"orthotope" -> "deepseq";
"orthotope" -> "dlist";
"orthotope" -> "pretty";
"orthotope" -> "vector";
"parallel" -> "array";
"parallel" -> "base";
"parallel" -> "containers";
"parallel" -> "deepseq";
"parallel" -> "ghc-prim";
"parsec" -> "base";
"parsec" -> "bytestring";
"parsec" -> "mtl";
"parsec" -> "text";
"parser-combinators" -> "base";
"parsers" -> "attoparsec";
"parsers" -> "base";
"parsers" -> "base-orphans";
"parsers" -> "binary";
"parsers" -> "charset";
"parsers" -> "containers";
"parsers" -> "mtl";
"parsers" -> "parsec";
"parsers" -> "scientific";
"parsers" -> "semigroups";
"parsers" -> "text";
"parsers" -> "transformers";
"parsers" -> "unordered-containers";
"pem" -> "base";
"pem" -> "basement";
"pem" -> "bytestring";
"pem" -> "memory";
"pretty" -> "base";
"pretty" -> "deepseq";
"pretty" -> "ghc-prim";
"pretty-show" -> "array";
"pretty-show" -> "base";
"pretty-show" -> "filepath";
"pretty-show" -> "ghc-prim";
"pretty-show" -> "happy";
"pretty-show" -> "haskell-lexer";
"pretty-show" -> "pretty";
"pretty-show" -> "text";
"pretty-simple" -> "Cabal";
"pretty-simple" -> "base";
"pretty-simple" -> "cabal-doctest";
"pretty-simple" -> "containers";
"pretty-simple" -> "mtl";
"pretty-simple" -> "prettyprinter";
"pretty-simple" -> "prettyprinter-ansi-terminal";
"pretty-simple" -> "text";
"pretty-simple" -> "transformers";
"pretty-terminal" -> "base";
"pretty-terminal" -> "text";
"prettyprinter" -> "base";
"prettyprinter" -> "text";
"prettyprinter-ansi-terminal" -> "ansi-terminal";
"prettyprinter-ansi-terminal" -> "base";
"prettyprinter-ansi-terminal" -> "prettyprinter";
"prettyprinter-ansi-terminal" -> "text";
"primitive" -> "base";
"primitive" -> "deepseq";
"primitive" -> "transformers";
"process" -> "base";
"process" -> "deepseq";
"process" -> "directory";
"process" -> "filepath";
"process" -> "unix";
"profunctors" -> "base";
"profunctors" -> "base-orphans";
"profunctors" -> "bifunctors";
"profunctors" -> "comonad";
"profunctors" -> "contravariant";
"profunctors" -> "distributive";
"profunctors" -> "tagged";
"profunctors" -> "transformers";
"psqueues" -> "base";
"psqueues" -> "deepseq";
"psqueues" -> "ghc-prim";
"psqueues" -> "hashable";
"pvar" -> "base";
"pvar" -> "deepseq";
"pvar" -> "primitive";
"rainbow" -> "base";
"rainbow" -> "bytestring";
"rainbow" -> "lens";
"rainbow" -> "terminfo";
"rainbow" -> "text";
"random" -> "base";
"random" -> "time";
"raw-strings-qq" -> "base";
"raw-strings-qq" -> "template-haskell";
"recursion-schemes" -> "base";
"recursion-schemes" -> "base-orphans";
"recursion-schemes" -> "comonad";
"recursion-schemes" -> "containers";
"recursion-schemes" -> "data-fix";
"recursion-schemes" -> "free";
"recursion-schemes" -> "template-haskell";
"recursion-schemes" -> "th-abstraction";
"recursion-schemes" -> "transformers";
"reflection" -> "base";
"reflection" -> "template-haskell";
"regex" -> "array";
"regex" -> "base";
"regex" -> "base-compat";
"regex" -> "bytestring";
"regex" -> "containers";
"regex" -> "hashable";
"regex" -> "regex-base";
"regex" -> "regex-pcre-builtin";
"regex" -> "regex-tdfa";
"regex" -> "template-haskell";
"regex" -> "text";
"regex" -> "time";
"regex" -> "time-locale-compat";
"regex" -> "transformers";
"regex" -> "unordered-containers";
"regex" -> "utf8-string";
"regex-applicative" -> "base";
"regex-applicative" -> "containers";
"regex-applicative" -> "filtrable";
"regex-applicative" -> "transformers";
"regex-applicative-text" -> "base";
"regex-applicative-text" -> "regex-applicative";
"regex-applicative-text" -> "text";
"regex-base" -> "array";
"regex-base" -> "base";
"regex-base" -> "bytestring";
"regex-base" -> "containers";
"regex-base" -> "mtl";
"regex-base" -> "text";
"regex-compat" -> "array";
"regex-compat" -> "base";
"regex-compat" -> "regex-base";
"regex-compat" -> "regex-posix";
"regex-pcre-builtin" -> "array";
"regex-pcre-builtin" -> "base";
"regex-pcre-builtin" -> "bytestring";
"regex-pcre-builtin" -> "containers";
"regex-pcre-builtin" -> "regex-base";
"regex-pcre-builtin" -> "text";
"regex-posix" -> "array";
"regex-posix" -> "base";
"regex-posix" -> "bytestring";
"regex-posix" -> "containers";
"regex-posix" -> "regex-base";
"regex-tdfa" -> "array";
"regex-tdfa" -> "base";
"regex-tdfa" -> "bytestring";
"regex-tdfa" -> "containers";
"regex-tdfa" -> "mtl";
"regex-tdfa" -> "parsec";
"regex-tdfa" -> "regex-base";
"regex-tdfa" -> "text";
"resource-pool" -> "base";
"resource-pool" -> "hashable";
"resource-pool" -> "monad-control";
"resource-pool" -> "stm";
"resource-pool" -> "time";
"resource-pool" -> "transformers";
"resource-pool" -> "transformers-base";
"resource-pool" -> "vector";
"resourcet" -> "base";
"resourcet" -> "containers";
"resourcet" -> "exceptions";
"resourcet" -> "mtl";
"resourcet" -> "primitive";
"resourcet" -> "transformers";
"resourcet" -> "unliftio-core";
"safe" -> "base";
"safe-exceptions" -> "base";
"safe-exceptions" -> "deepseq";
"safe-exceptions" -> "exceptions";
"safe-exceptions" -> "transformers";
"scanner" -> "base";
"scanner" -> "bytestring";
"scanner" -> "fail";
"scheduler" -> "atomic-primops";
"scheduler" -> "base";
"scheduler" -> "deepseq";
"scheduler" -> "exceptions";
"scheduler" -> "primitive";
"scheduler" -> "pvar";
"scheduler" -> "unliftio-core";
"scientific" -> "base";
"scientific" -> "binary";
"scientific" -> "bytestring";
"scientific" -> "containers";
"scientific" -> "deepseq";
"scientific" -> "hashable";
"scientific" -> "integer-gmp";
"scientific" -> "integer-logarithms";
"scientific" -> "primitive";
"scientific" -> "text";
"semigroupoids" -> "base";
"semigroupoids" -> "base-orphans";
"semigroupoids" -> "bifunctors";
"semigroupoids" -> "comonad";
"semigroupoids" -> "containers";
"semigroupoids" -> "contravariant";
"semigroupoids" -> "distributive";
"semigroupoids" -> "hashable";
"semigroupoids" -> "tagged";
"semigroupoids" -> "template-haskell";
"semigroupoids" -> "transformers";
"semigroupoids" -> "transformers-compat";
"semigroupoids" -> "unordered-containers";
"semigroups" -> "base";
"silently" -> "base";
"silently" -> "deepseq";
"silently" -> "directory";
"simple-sendfile" -> "base";
"simple-sendfile" -> "bytestring";
"simple-sendfile" -> "network";
"simple-sendfile" -> "unix";
"singletons" -> "Cabal";
"singletons" -> "base";
"singletons" -> "containers";
"singletons" -> "directory";
"singletons" -> "filepath";
"singletons" -> "ghc-boot-th";
"singletons" -> "mtl";
"singletons" -> "pretty";
"singletons" -> "syb";
"singletons" -> "template-haskell";
"singletons" -> "text";
"singletons" -> "th-desugar";
"singletons" -> "transformers";
"socks" -> "base";
"socks" -> "basement";
"socks" -> "bytestring";
"socks" -> "cereal";
"socks" -> "network";
"sort" -> "base";
"split" -> "base";
"splitmix" -> "base";
"splitmix" -> "deepseq";
"sqlite-simple" -> "Only";
"sqlite-simple" -> "attoparsec";
"sqlite-simple" -> "base";
"sqlite-simple" -> "blaze-builder";
"sqlite-simple" -> "blaze-textual";
"sqlite-simple" -> "bytestring";
"sqlite-simple" -> "containers";
"sqlite-simple" -> "direct-sqlite";
"sqlite-simple" -> "semigroups";
"sqlite-simple" -> "template-haskell";
"sqlite-simple" -> "text";
"sqlite-simple" -> "time";
"sqlite-simple" -> "transformers";
"stm" -> "array";
"stm" -> "base";
"streaming-commons" -> "array";
"streaming-commons" -> "async";
"streaming-commons" -> "base";
"streaming-commons" -> "bytestring";
"streaming-commons" -> "directory";
"streaming-commons" -> "network";
"streaming-commons" -> "process";
"streaming-commons" -> "random";
"streaming-commons" -> "stm";
"streaming-commons" -> "text";
"streaming-commons" -> "transformers";
"streaming-commons" -> "unix";
"streaming-commons" -> "zlib";
"strict" -> "assoc";
"strict" -> "base";
"strict" -> "binary";
"strict" -> "bytestring";
"strict" -> "deepseq";
"strict" -> "ghc-prim";
"strict" -> "hashable";
"strict" -> "text";
"strict" -> "these";
"strict" -> "transformers";
"strict-io" -> "base";
"strict-io" -> "deepseq";
"strict-io" -> "extensible-exceptions";
"svg-builder" -> "base";
"svg-builder" -> "blaze-builder";
"svg-builder" -> "bytestring";
"svg-builder" -> "hashable";
"svg-builder" -> "text";
"svg-builder" -> "unordered-containers";
"syb" -> "base";
"system-fileio" -> "base";
"system-fileio" -> "bytestring";
"system-fileio" -> "system-filepath";
"system-fileio" -> "text";
"system-fileio" -> "time";
"system-fileio" -> "unix";
"system-filepath" -> "Cabal";
"system-filepath" -> "base";
"system-filepath" -> "bytestring";
"system-filepath" -> "deepseq";
"system-filepath" -> "text";
"tagged" -> "base";
"tagged" -> "deepseq";
"tagged" -> "template-haskell";
"tagged" -> "transformers";
"tcp-streams" -> "base";
"tcp-streams" -> "bytestring";
"tcp-streams" -> "data-default-class";
"tcp-streams" -> "io-streams";
"tcp-streams" -> "network";
"tcp-streams" -> "pem";
"tcp-streams" -> "tls";
"tcp-streams" -> "x509";
"tcp-streams" -> "x509-store";
"tcp-streams" -> "x509-system";
"template-haskell" -> "base";
"template-haskell" -> "ghc-boot-th";
"template-haskell" -> "ghc-prim";
"template-haskell" -> "pretty";
"temporary" -> "base";
"temporary" -> "directory";
"temporary" -> "exceptions";
"temporary" -> "filepath";
"temporary" -> "random";
"temporary" -> "transformers";
"temporary" -> "unix";
"terminal-size" -> "base";
"terminfo" -> "base";
"text" -> "array";
"text" -> "base";
"text" -> "binary";
"text" -> "bytestring";
"text" -> "deepseq";
"text" -> "ghc-prim";
"text" -> "integer-gmp";
"text" -> "template-haskell";
"text-format-simple" -> "MissingH";
"text-format-simple" -> "base";
"text-icu" -> "base";
"text-icu" -> "bytestring";
"text-icu" -> "deepseq";
"text-icu" -> "text";
"th-abstraction" -> "base";
"th-abstraction" -> "containers";
"th-abstraction" -> "ghc-prim";
"th-abstraction" -> "template-haskell";
"th-compat" -> "base";
"th-compat" -> "template-haskell";
"th-desugar" -> "base";
"th-desugar" -> "containers";
"th-desugar" -> "fail";
"th-desugar" -> "ghc-prim";
"th-desugar" -> "mtl";
"th-desugar" -> "ordered-containers";
"th-desugar" -> "semigroups";
"th-desugar" -> "syb";
"th-desugar" -> "template-haskell";
"th-desugar" -> "th-abstraction";
"th-desugar" -> "th-lift";
"th-desugar" -> "th-orphans";
"th-desugar" -> "transformers-compat";
"th-env" -> "base";
"th-env" -> "template-haskell";
"th-expand-syns" -> "base";
"th-expand-syns" -> "containers";
"th-expand-syns" -> "syb";
"th-expand-syns" -> "template-haskell";
"th-lift" -> "base";
"th-lift" -> "ghc-prim";
"th-lift" -> "template-haskell";
"th-lift" -> "th-abstraction";
"th-lift-instances" -> "base";
"th-lift-instances" -> "bytestring";
"th-lift-instances" -> "containers";
"th-lift-instances" -> "template-haskell";
"th-lift-instances" -> "text";
"th-lift-instances" -> "th-lift";
"th-lift-instances" -> "transformers";
"th-lift-instances" -> "vector";
"th-orphans" -> "base";
"th-orphans" -> "mtl";
"th-orphans" -> "template-haskell";
"th-orphans" -> "th-compat";
"th-orphans" -> "th-lift";
"th-orphans" -> "th-lift-instances";
"th-orphans" -> "th-reify-many";
"th-reify-many" -> "base";
"th-reify-many" -> "containers";
"th-reify-many" -> "mtl";
"th-reify-many" -> "safe";
"th-reify-many" -> "template-haskell";
"th-reify-many" -> "th-expand-syns";
"these" -> "assoc";
"these" -> "base";
"these" -> "binary";
"these" -> "deepseq";
"these" -> "hashable";
"time" -> "base";
"time" -> "deepseq";
"time-compat" -> "base";
"time-compat" -> "base-orphans";
"time-compat" -> "deepseq";
"time-compat" -> "time";
"time-locale-compat" -> "base";
"time-locale-compat" -> "time";
"time-manager" -> "auto-update";
"time-manager" -> "base";
"tls" -> "asn1-encoding";
"tls" -> "asn1-types";
"tls" -> "async";
"tls" -> "base";
"tls" -> "bytestring";
"tls" -> "cereal";
"tls" -> "cryptonite";
"tls" -> "data-default-class";
"tls" -> "hourglass";
"tls" -> "memory";
"tls" -> "mtl";
"tls" -> "network";
"tls" -> "transformers";
"tls" -> "x509";
"tls" -> "x509-store";
"tls" -> "x509-validation";
"transformers" -> "base";
"transformers-base" -> "base";
"transformers-base" -> "base-orphans";
"transformers-base" -> "stm";
"transformers-base" -> "transformers";
"transformers-base" -> "transformers-compat";
"transformers-compat" -> "base";
"transformers-compat" -> "ghc-prim";
"transformers-compat" -> "transformers";
"turtle" -> "ansi-wl-pprint";
"turtle" -> "async";
"turtle" -> "base";
"turtle" -> "bytestring";
"turtle" -> "clock";
"turtle" -> "containers";
"turtle" -> "directory";
"turtle" -> "exceptions";
"turtle" -> "foldl";
"turtle" -> "hostname";
"turtle" -> "managed";
"turtle" -> "optional-args";
"turtle" -> "optparse-applicative";
"turtle" -> "process";
"turtle" -> "stm";
"turtle" -> "streaming-commons";
"turtle" -> "system-fileio";
"turtle" -> "system-filepath";
"turtle" -> "temporary";
"turtle" -> "text";
"turtle" -> "time";
"turtle" -> "transformers";
"turtle" -> "unix";
"turtle" -> "unix-compat";
"typed-process" -> "async";
"typed-process" -> "base";
"typed-process" -> "bytestring";
"typed-process" -> "process";
"typed-process" -> "stm";
"typed-process" -> "transformers";
"typed-process" -> "unliftio-core";
"unix" -> "base";
"unix" -> "bytestring";
"unix" -> "time";
"unix-compat" -> "base";
"unix-compat" -> "unix";
"unix-time" -> "base";
"unix-time" -> "binary";
"unix-time" -> "bytestring";
"unix-time" -> "old-time";
"unliftio-core" -> "base";
"unliftio-core" -> "transformers";
"unordered-containers" -> "base";
"unordered-containers" -> "deepseq";
"unordered-containers" -> "hashable";
"uri-encode" -> "base";
"uri-encode" -> "bytestring";
"uri-encode" -> "network-uri";
"uri-encode" -> "text";
"uri-encode" -> "utf8-string";
"utf8-string" -> "base";
"utf8-string" -> "bytestring";
"utility-ht" -> "base";
"uuid-types" -> "base";
"uuid-types" -> "binary";
"uuid-types" -> "bytestring";
"uuid-types" -> "deepseq";
"uuid-types" -> "hashable";
"uuid-types" -> "random";
"uuid-types" -> "text";
"vault" -> "base";
"vault" -> "containers";
"vault" -> "hashable";
"vault" -> "semigroups";
"vault" -> "unordered-containers";
"vector" -> "base";
"vector" -> "deepseq";
"vector" -> "ghc-prim";
"vector" -> "primitive";
"vector-algorithms" -> "base";
"vector-algorithms" -> "bytestring";
"vector-algorithms" -> "primitive";
"vector-algorithms" -> "vector";
"vector-space" -> "Boolean";
"vector-space" -> "MemoTrie";
"vector-space" -> "NumInstances";
"vector-space" -> "base";
"void" -> "base";
"vty" -> "ansi-terminal";
"vty" -> "base";
"vty" -> "binary";
"vty" -> "blaze-builder";
"vty" -> "bytestring";
"vty" -> "containers";
"vty" -> "deepseq";
"vty" -> "directory";
"vty" -> "filepath";
"vty" -> "hashable";
"vty" -> "microlens";
"vty" -> "microlens-mtl";
"vty" -> "microlens-th";
"vty" -> "mtl";
"vty" -> "parallel";
"vty" -> "parsec";
"vty" -> "stm";
"vty" -> "terminfo";
"vty" -> "text";
"vty" -> "transformers";
"vty" -> "unix";
"vty" -> "utf8-string";
"vty" -> "vector";
"wai" -> "base";
"wai" -> "bytestring";
"wai" -> "http-types";
"wai" -> "network";
"wai" -> "text";
"wai" -> "vault";
"wai-app-static" -> "base";
"wai-app-static" -> "blaze-html";
"wai-app-static" -> "blaze-markup";
"wai-app-static" -> "bytestring";
"wai-app-static" -> "containers";
"wai-app-static" -> "cryptonite";
"wai-app-static" -> "directory";
"wai-app-static" -> "file-embed";
"wai-app-static" -> "filepath";
"wai-app-static" -> "http-date";
"wai-app-static" -> "http-types";
"wai-app-static" -> "memory";
"wai-app-static" -> "mime-types";
"wai-app-static" -> "old-locale";
"wai-app-static" -> "optparse-applicative";
"wai-app-static" -> "template-haskell";
"wai-app-static" -> "text";
"wai-app-static" -> "time";
"wai-app-static" -> "transformers";
"wai-app-static" -> "unix-compat";
"wai-app-static" -> "unordered-containers";
"wai-app-static" -> "wai";
"wai-app-static" -> "wai-extra";
"wai-app-static" -> "warp";
"wai-app-static" -> "zlib";
"wai-extra" -> "HUnit";
"wai-extra" -> "aeson";
"wai-extra" -> "ansi-terminal";
"wai-extra" -> "base";
"wai-extra" -> "base64-bytestring";
"wai-extra" -> "bytestring";
"wai-extra" -> "call-stack";
"wai-extra" -> "case-insensitive";
"wai-extra" -> "containers";
"wai-extra" -> "cookie";
"wai-extra" -> "data-default-class";
"wai-extra" -> "directory";
"wai-extra" -> "fast-logger";
"wai-extra" -> "http-types";
"wai-extra" -> "http2";
"wai-extra" -> "iproute";
"wai-extra" -> "network";
"wai-extra" -> "resourcet";
"wai-extra" -> "streaming-commons";
"wai-extra" -> "text";
"wai-extra" -> "time";
"wai-extra" -> "transformers";
"wai-extra" -> "unix";
"wai-extra" -> "vault";
"wai-extra" -> "wai";
"wai-extra" -> "wai-logger";
"wai-extra" -> "word8";
"wai-logger" -> "Cabal";
"wai-logger" -> "base";
"wai-logger" -> "byteorder";
"wai-logger" -> "bytestring";
"wai-logger" -> "cabal-doctest";
"wai-logger" -> "fast-logger";
"wai-logger" -> "http-types";
"wai-logger" -> "network";
"wai-logger" -> "wai";
"wai-predicates" -> "attoparsec";
"wai-predicates" -> "base";
"wai-predicates" -> "bytestring";
"wai-predicates" -> "bytestring-conversion";
"wai-predicates" -> "case-insensitive";
"wai-predicates" -> "cookie";
"wai-predicates" -> "http-types";
"wai-predicates" -> "singletons";
"wai-predicates" -> "text";
"wai-predicates" -> "transformers";
"wai-predicates" -> "vault";
"wai-predicates" -> "vector";
"wai-predicates" -> "wai";
"wai-session" -> "StateVar";
"wai-session" -> "base";
"wai-session" -> "blaze-builder";
"wai-session" -> "bytestring";
"wai-session" -> "bytestring-builder";
"wai-session" -> "containers";
"wai-session" -> "cookie";
"wai-session" -> "entropy";
"wai-session" -> "http-types";
"wai-session" -> "time";
"wai-session" -> "transformers";
"wai-session" -> "vault";
"wai-session" -> "wai";
"wai-util" -> "aeson";
"wai-util" -> "base";
"wai-util" -> "blaze-builder";
"wai-util" -> "bytestring";
"wai-util" -> "conduit";
"wai-util" -> "http-accept";
"wai-util" -> "http-types";
"wai-util" -> "network-uri";
"wai-util" -> "text";
"wai-util" -> "transformers";
"wai-util" -> "wai";
"wai-util" -> "wai-extra";
"wai-websockets" -> "base";
"wai-websockets" -> "bytestring";
"wai-websockets" -> "case-insensitive";
"wai-websockets" -> "file-embed";
"wai-websockets" -> "http-types";
"wai-websockets" -> "network";
"wai-websockets" -> "text";
"wai-websockets" -> "transformers";
"wai-websockets" -> "wai";
"wai-websockets" -> "wai-app-static";
"wai-websockets" -> "warp";
"wai-websockets" -> "websockets";
"warp" -> "array";
"warp" -> "async";
"warp" -> "auto-update";
"warp" -> "base";
"warp" -> "bsb-http-chunked";
"warp" -> "bytestring";
"warp" -> "case-insensitive";
"warp" -> "containers";
"warp" -> "ghc-prim";
"warp" -> "hashable";
"warp" -> "http-date";
"warp" -> "http-types";
"warp" -> "http2";
"warp" -> "iproute";
"warp" -> "network";
"warp" -> "simple-sendfile";
"warp" -> "stm";
"warp" -> "streaming-commons";
"warp" -> "text";
"warp" -> "time-manager";
"warp" -> "unix";
"warp" -> "unix-compat";
"warp" -> "vault";
"warp" -> "wai";
"warp" -> "word8";
"warp" -> "x509";
"websockets" -> "SHA";
"websockets" -> "async";
"websockets" -> "attoparsec";
"websockets" -> "base";
"websockets" -> "base64-bytestring";
"websockets" -> "binary";
"websockets" -> "bytestring";
"websockets" -> "bytestring-builder";
"websockets" -> "case-insensitive";
"websockets" -> "clock";
"websockets" -> "containers";
"websockets" -> "entropy";
"websockets" -> "network";
"websockets" -> "random";
"websockets" -> "streaming-commons";
"websockets" -> "text";
"wire-streams" -> "base";
"wire-streams" -> "binary";
"wire-streams" -> "binary-parsers";
"wire-streams" -> "bytestring";
"wire-streams" -> "io-streams";
"with-utf8" -> "base";
"with-utf8" -> "directory";
"with-utf8" -> "filepath";
"with-utf8" -> "process";
"with-utf8" -> "safe-exceptions";
"with-utf8" -> "text";
"with-utf8" -> "th-env";
"word24" -> "base";
"word24" -> "deepseq";
"word8" -> "base";
"x509" -> "asn1-encoding";
"x509" -> "asn1-parse";
"x509" -> "asn1-types";
"x509" -> "base";
"x509" -> "bytestring";
"x509" -> "containers";
"x509" -> "cryptonite";
"x509" -> "hourglass";
"x509" -> "memory";
"x509" -> "mtl";
"x509" -> "pem";
"x509-store" -> "asn1-encoding";
"x509-store" -> "asn1-types";
"x509-store" -> "base";
"x509-store" -> "bytestring";
"x509-store" -> "containers";
"x509-store" -> "cryptonite";
"x509-store" -> "directory";
"x509-store" -> "filepath";
"x509-store" -> "mtl";
"x509-store" -> "pem";
"x509-store" -> "x509";
"x509-system" -> "base";
"x509-system" -> "bytestring";
"x509-system" -> "containers";
"x509-system" -> "directory";
"x509-system" -> "filepath";
"x509-system" -> "mtl";
"x509-system" -> "pem";
"x509-system" -> "process";
"x509-system" -> "x509";
"x509-system" -> "x509-store";
"x509-validation" -> "asn1-encoding";
"x509-validation" -> "asn1-types";
"x509-validation" -> "base";
"x509-validation" -> "bytestring";
"x509-validation" -> "containers";
"x509-validation" -> "cryptonite";
"x509-validation" -> "data-default-class";
"x509-validation" -> "hourglass";
"x509-validation" -> "memory";
"x509-validation" -> "mtl";
"x509-validation" -> "pem";
"x509-validation" -> "x509";
"x509-validation" -> "x509-store";
"zlib" -> "base";
"zlib" -> "bytestring";
"zlib-bindings" -> "base";
"zlib-bindings" -> "bytestring";
"zlib-bindings" -> "zlib";
}
